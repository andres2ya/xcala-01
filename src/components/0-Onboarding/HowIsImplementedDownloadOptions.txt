
NOTE: Pasos 1 y 2 se implementan en un archivo llamado install.js, el cual es un script ubicado en public/scripts/install.js

//NOTE: 1. Creando variable global con window usando un nombre unico: XcalaWindowVariable, con getters y setters y un lsitener para saber desde cualquier parte del app cuando se cambio el valor de deferredPrompt
window.XcalaWindowVaraible={
    deferredPromptInternal:null,
    appInstalledInternal:false,
    deferredPrompt_listener:function(val){},
    appInstalled_listener:function(val){},
    set deferredPrompt(val){
        this.deferredPromptInternal=val;
        this.deferredPrompt_listener(val);
    },
    get deferredPrompt(){
        return this.deferredPromptInternal;
    },
    set appInstalled(val){
        this.appInstalledInternal=val
        this.appInstalled_listener(val);
    },
    get appInstalled(){
        return this.appInstalledInternal;
    },
    listenerDeferredPrompt:function(listener){
        this.deferredPrompt_listener=listener;
    },
    listenerAppInstalled:function(listener){
        this.appInstalled_listener=listener;
    },
}

//NOTE: 2. Setting window.XcalaWindowVaraible.deferredPrompt
console.log('1.Se va a capturar a beforeinstallprompt')
window.addEventListener('beforeinstallprompt', (e)=>{
    console.log('2. beforeinstallprompt fue capturado! con exito y es este ->',e)
    e.preventDefault()//NOTE: Para versiones Chrome 76 (July 2019) esta linea evita que se muestre el mensjae de invitacion a instalar con la UI de google
    window.XcalaWindowVaraible.deferredPrompt=e//NOTE: Guarda a nivel global el evento (usando una variable de window). Asi, podra ser usado desde cualquier lugar del app que se desee.
})


//NOTE: Paso 3 se implementar en el componentDidMount del componente "OnboardingContainer" y se ejecuta siempre y cuando aun no se haya guardado en la variable global el deferredPrompt
//NOTE: 3. Listening changes in window.XcalaWindowVaraible.deferredPrompt
      window.XcalaWindowVaraible.listenerDeferredPrompt((val)=>{
        console.log('Se escucho la captura de beforeinstallPrompt!',val)
        this.setState({isDeferredPromptCharge:true})
      })


//NOTE: Paso 4 se implementa como un handler en el componente DownloadPWA
addToHomeScreen = async ()=>{
        //NOTE: 4. Usando funcion que lanza el mensaje de google para aÃ±adir a home screen
        const resUser = await addToHomeScreen()
        console.log(resUser)
        if(resUser==='accepted'){
            this.setState({isDownloading:true})
        }
    }

//NOTE: Paso 5 se implementa en el componentDidMount del componente DownloadPWA 
//NOTE: 5. Listening when app is installed succesfully
        window.onappinstalled=()=>{
            console.log('Desde onappinstalled: La aplicacion se instalo correctamente!')
            window.XcalaWindowVaraible.appInstalled=true
            setTimeout(() => {
                this.setState({isDownloaded:true,isDownloading:false})
            }, 4000);
        }


//NOTE: Paso 6 se implementar en el componentDidMount del componente "OnboardingContainer" y se ejecuta independientemente de si la variable global de deferredPrompt ha recibido algun valor
//NOTE: 6. Listening changes in window.XcalaWindowVaraible.appInstalled
    window.XcalaWindowVaraible.listenerAppInstalled((val)=>{
      console.log('Se escucho instalaccion del app!',val)
      this.setState({appInstalled:true})
    })